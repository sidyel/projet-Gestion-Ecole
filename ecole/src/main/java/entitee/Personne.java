package entitee;
// Generated 3 sept. 2024, 20:23:09 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Personne generated by hbm2java
 */
@Entity
@Table(name = "personne", schema = "public")
public class Personne implements java.io.Serializable {

	private int idPersonne;
	private String adresse;
	private Date datenaissance;
	private String email;
	private String login;
	private String nom;
	private String password;
	private String prenom;
	private String telephone;
	private Set<Eleve> eleves = new HashSet<Eleve>(0);
	private Set<Tuteur> tuteurs = new HashSet<Tuteur>(0);
	private Set<Professeur> professeurs = new HashSet<Professeur>(0);
	private Set<Personnel> personnels = new HashSet<Personnel>(0);
	private Set<Administrateur> administrateurs = new HashSet<Administrateur>(0);
	
    private Role role;

	public Personne() {
	}

	public Personne(int idPersonne) {
		this.idPersonne = idPersonne;
	}

	public Personne(int idPersonne, String adresse, Date datenaissance, String email, String login, String nom,
			String password, String prenom, String telephone, Set<Eleve> eleves, Set<Tuteur> tuteurs,
			Set<Professeur> professeurs, Set<Personnel> personnels, Set<Administrateur> administrateurs) {
		this.idPersonne = idPersonne;
		this.adresse = adresse;
		this.datenaissance = datenaissance;
		this.email = email;
		this.login = login;
		this.nom = nom;
		this.password = password;
		this.prenom = prenom;
		this.telephone = telephone;
		this.eleves = eleves;
		this.tuteurs = tuteurs;
		this.professeurs = professeurs;
		this.personnels = personnels;
		this.administrateurs = administrateurs;
	}

	@Id

	@Column(name = "id_personne", unique = true, nullable = false)
	@GeneratedValue
	public int getIdPersonne() {
		return this.idPersonne;
	}

	public void setIdPersonne(int idPersonne) {
		this.idPersonne = idPersonne;
	}

	@Column(name = "adresse", length = 254)
	public String getAdresse() {
		return this.adresse;
	}

	public void setAdresse(String adresse) {
		this.adresse = adresse;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datenaissance", length = 13)
	public Date getDatenaissance() {
		return this.datenaissance;
	}

	public void setDatenaissance(Date datenaissance) {
		this.datenaissance = datenaissance;
	}

	@Column(name = "email", length = 254)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "login", length = 254)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "nom", length = 254)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "password", length = 254)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "prenom", length = 254)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "telephone", length = 254)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Eleve> getEleves() {
		return this.eleves;
	}

	public void setEleves(Set<Eleve> eleves) {
		this.eleves = eleves;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Tuteur> getTuteurs() {
		return this.tuteurs;
	}

	public void setTuteurs(Set<Tuteur> tuteurs) {
		this.tuteurs = tuteurs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Professeur> getProfesseurs() {
		return this.professeurs;
	}

	public void setProfesseurs(Set<Professeur> professeurs) {
		this.professeurs = professeurs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Personnel> getPersonnels() {
		return this.personnels;
	}

	public void setPersonnels(Set<Personnel> personnels) {
		this.personnels = personnels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Administrateur> getAdministrateurs() {
		return this.administrateurs;
	}

	public void setAdministrateurs(Set<Administrateur> administrateurs) {
		this.administrateurs = administrateurs;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_role", nullable = false) // Foreign key to Role
	public Role getRole() {
		return role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	

}
