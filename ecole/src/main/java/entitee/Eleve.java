package entitee;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Eleve generated by hbm2java
 */
@Entity
@Table(name = "eleve", schema = "public")
public class Eleve implements java.io.Serializable {

    @Id
    @GeneratedValue
    @Column(name = "id_eleve", unique = true, nullable = false)
    private int idEleve;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_bus")
    private BusTransport busTransport;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_cantine")
    private Cantine cantine;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idclasse")
    private Classes classes;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_ecole")
    private Ecole ecole;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idinfirmerie")
    private Infirmerie infirmerie;
    
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_personne")
    private Personne personne;
    
    @Column(name = "nb_absences")
    private Integer nbAbsences;

    @Column(name = "est_present")
    private boolean estPresent;
    
    @Column(name = "allergie", length = 500)
    private String allergie;
    
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "asso_eleve_activite", schema = "public", 
        joinColumns = {@JoinColumn(name = "id_eleve", nullable = false, updatable = false)}, 
        inverseJoinColumns = {@JoinColumn(name = "id_activite", nullable = false, updatable = false)}
    )
    private Set<ActiviteExtra> activiteExtras = new HashSet<>(0);
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "eleve")
    private Set<AssoEleveEvaluation> assoEleveEvaluations = new HashSet<>(0);
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "eleve")
    private Set<Paiement> paiements = new HashSet<>(0);
    
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "eleve")
    private Set<Absence> absences = new HashSet<>(0);

    // Relation avec Tuteur
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tuteur", nullable = true)
    private Tuteur tuteur;

    // Constructeurs, getters, et setters

    public Eleve() {
    }

    public Eleve(int idEleve) {
        this.idEleve = idEleve;
    }

    public Eleve(int idEleve, BusTransport busTransport, Cantine cantine, Classes classes, Ecole ecole,
                 Infirmerie infirmerie, Personne personne, Integer nbAbsences, Set<ActiviteExtra> activiteExtras,
                 Set<AssoEleveEvaluation> assoEleveEvaluations, Set<Paiement> paiements, Set<Absence> absences) {
        this.idEleve = idEleve;
        this.busTransport = busTransport;
        this.cantine = cantine;
        this.classes = classes;
        this.ecole = ecole;
        this.infirmerie = infirmerie;
        this.personne = personne;
        this.nbAbsences = nbAbsences;
        this.activiteExtras = activiteExtras;
        this.assoEleveEvaluations = assoEleveEvaluations;
        this.paiements = paiements;
        this.absences = absences;
    }

    // Getters et Setters pour toutes les propriétés, y compris Tuteur

    public int getIdEleve() {
        return this.idEleve;
    }

    public void setIdEleve(int idEleve) {
        this.idEleve = idEleve;
    }

    public BusTransport getBusTransport() {
        return this.busTransport;
    }

    public void setBusTransport(BusTransport busTransport) {
        this.busTransport = busTransport;
    }

    public Cantine getCantine() {
        return this.cantine;
    }

    public void setCantine(Cantine cantine) {
        this.cantine = cantine;
    }

    public Classes getClasses() {
        return this.classes;
    }

    public void setClasses(Classes classes) {
        this.classes = classes;
    }

    public Ecole getEcole() {
        return this.ecole;
    }

    public void setEcole(Ecole ecole) {
        this.ecole = ecole;
    }

    public Infirmerie getInfirmerie() {
        return this.infirmerie;
    }

    public void setInfirmerie(Infirmerie infirmerie) {
        this.infirmerie = infirmerie;
    }

    public Personne getPersonne() {
        return this.personne;
    }

    public void setPersonne(Personne personne) {
        this.personne = personne;
    }

    public Integer getNbAbsences() {
        return this.nbAbsences;
    }

    public void setNbAbsences(Integer nbAbsences) {
        this.nbAbsences = nbAbsences;
    }

    public boolean isEstPresent() {
        return this.estPresent;
    }

    public void setEstPresent(boolean estPresent) {
        this.estPresent = estPresent;
    }

    public String getAllergie() {
        return this.allergie;
    }

    public void setAllergie(String allergie) {
        this.allergie = allergie;
    }

    public Set<ActiviteExtra> getActiviteExtras() {
        return this.activiteExtras;
    }

    public void setActiviteExtras(Set<ActiviteExtra> activiteExtras) {
        this.activiteExtras = activiteExtras;
    }

    public Set<AssoEleveEvaluation> getAssoEleveEvaluations() {
        return this.assoEleveEvaluations;
    }

    public void setAssoEleveEvaluations(Set<AssoEleveEvaluation> assoEleveEvaluations) {
        this.assoEleveEvaluations = assoEleveEvaluations;
    }

    public Set<Paiement> getPaiements() {
        return this.paiements;
    }

    public void setPaiements(Set<Paiement> paiements) {
        this.paiements = paiements;
    }

    public Set<Absence> getAbsences() {
        return this.absences;
    }

    public void setAbsences(Set<Absence> absences) {
        this.absences = absences;
    }

    public Tuteur getTuteur() {
        return this.tuteur;
    }

    public void setTuteur(Tuteur tuteur) {
        this.tuteur = tuteur;
    }
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "eleve")
    private Set<Convocation> convocations = new HashSet<>(0); // Relation vers Convocation
    
    public Set<Convocation> getConvocations() {
        return this.convocations;
    }

    public void setConvocations(Set<Convocation> convocations) {
        this.convocations = convocations;
    }

}
